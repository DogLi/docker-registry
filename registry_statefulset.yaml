apiVersion: v1
kind: ConfigMap
metadata:
  name: docker-auth
  namespace: default
data:
  auth.cert: |
    -----BEGIN CERTIFICATE-----
    MIIE+zCCAuOgAwIBAgIJAIDbOpAN0RRjMA0GCSqGSIb3DQEBCwUAMBQxEjAQBgNV
    BAMMCWxvY2FsaG9zdDAeFw0xODAzMjEwODQ3NTVaFw0xOTAzMjEwODQ3NTVaMBQx
    EjAQBgNVBAMMCWxvY2FsaG9zdDCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoC
    ggIBAMbCFtmzwxttVkXUHcxNfvrVwvrflNgjrhxZAz3WM0j+hob9AzlCoUwpuQxG
    ZHxnLhFpUfZXkz13S6y4JozI53DZcVhB2KIfb5FZ77taEOOF/yx1tmmUAO0UWASK
    0hyfKeSe4vnVEOCk3NgalB54b0YMycsmg/TPyhYjdvzAwexUENxdEGzgZBXO8MEe
    ILWdMj0S8w+FmZ2X5h+bOmMc/WV3xvh+4FRYf9XvezBrGw8MNliNL3XdA93EycMK
    Oe2/2uabOWtP+9raKIMLMeZLwfSfJ7XcU5VdIScpYd12P9u+DLbnVDJpEMOtO7vb
    4Hhffqsy5WEhmDWNy7C2K+3PacyRLAKbVPe/wFqkLeP/IbEqzOhcB7DpPMjIcJ45
    gaWUu3YWAn5vxmVl9GT69H0f8ta0ZIn42i+I2Rfb57/ELFmFyr2nsIzd13KPuX9g
    h/mSZQj+JNfv9WdO2cLyTNAT7k+AOTe4iHYQmdQ/x+2TQ7Tk+g/UviPx4rQkQ4zx
    W8+TiS3y+xTgT60udhbrd+l2wv95MjnAVxiGBTth17Ek9NbyoYZyIamlsjz9D2j1
    8KmHPL4JQ0zr9bKki9QFfJgFhkbUS9H2zinSGiSFVCdpUojREDog6TgxFKe/ZP0p
    9VofiRn19XTIiVN9GoalJ/N/RK4dMB0dhpQr1mdBHXPh8YcNAgMBAAGjUDBOMB0G
    A1UdDgQWBBQbhgz+EaiI++zIDCCiL/xypJ1LaTAfBgNVHSMEGDAWgBQbhgz+EaiI
    ++zIDCCiL/xypJ1LaTAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBCwUAA4ICAQAg
    +sawJm3+k9SpDU5/JualDK+qpLP1TqDrejfR9IjEL3jYKV6XbY4ZSr4pSnFBtwe/
    OX03lq+8Qc0SFIgGJUo2K1Aryu+PFXAcGCoazulev9pXPABxQGimhJE7pvin1Czg
    sxYYyOnUN0nyQIYE1Rw30FvwW7oWaW3eXOK/oPUBl3dVEu6NkLw8aDHkY0xZsr7H
    oMB7ZFXfsRKY6i5oEs0mZviZopiPEuPPZdCswAp8PB1FpLu3PhVitnmZzFA0Wr8o
    aU0Iq7pWE7/IboAcmmtc7gV3w9+rVi+YHzO98k6e3JgihJj8Zx3eZRJiz/xDGaem
    B8bYYT7fOOQbkN2kFreUg8dJb37EQ1T9LbzoeNSRr4ccI4paGqOmyVZlU9sp0cSc
    niVPjeIUScH1/uHJOAFrP6fWMy76yMKkwBUF4P43jDfGDvn6mxraly2WB/5LcHCL
    Qm+nA9DdnM0mrTEVD3MVs/SiDu98omZSu+rAMoBCi9tx/u3a2pEd1rYWkwYAoeEU
    3IS+CXueE4It+xSIZoNFSquwzL2cHCVSgHR14PXWXSd8CBe9xlm+/t7BpH01sQvr
    l9UoB3vKDskiPOTiELzAHPTZi+leo2fZpT3E3yLNcG8u2JhFEPgSNinh5/1dERIL
    ylfp7iyTkYMJrpOh3KJ7jyF7KW3GWfJOa6gs+jc+kA==
    -----END CERTIFICATE-----
  auth.key: |
    -----BEGIN PRIVATE KEY-----
    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
    jR8aBhbAAUuvi7+P7pnC0LsC3Ho4VHsJlw==
    -----END PRIVATE KEY-----

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: docker-registry
  namespace: default
data:
  config.yml: |
    version: 0.1
    log:
      fields:
        service: registry
    storage:
      cache:
        blobdescriptor: inmemory
      filesystem:
        rootdirectory: /var/lib/registry
      delete:
        enabled: true
    http:
      addr: 0.0.0.0:5000
      headers:
        X-Content-Type-Options: [nosniff]
    health:
      storagedriver:
        enabled: true
        interval: 10s
        threshold: 3
    auth:
      token:
        # external url to docker-web authentication endpoint
        realm: http://localhost:8080/api/auth
        # should be same as registry.name of registry-web
        service: localhost:5000
        # should be same as registry.auth.issuer of registry-web
        issuer: 'my issuer'
        # path to auth certificate
        rootcertbundle: /etc/docker/registry/auth.cert

---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: docker-registry
  labels:
    name: docker-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker-registry
  serviceName: docker-registry
  template:
    metadata:
      name: docker-registry
      labels:
        app: docker-registry
    spec:
      containers:
      - image: registry:2
        imagePullPolicy: IfNotPresent
        name: registry
        env:
        - name: REGISTRY_HTTP_TLS_CERTIFICATE
          value: "/etc/docker/registry/auth.cert"
        - name: REGISTRY_HTTP_TLS_KEY
          value: "/conf/auth.key"
        volumeMounts:
        - mountPath: /var/lib/registry
          name: registry-path
        - mountPath: /etc/docker/registry/config.yml
          name: config-path
          subPath: config.yml
        - mountPath: /etc/docker/registry/auth.cert
          name: auth-path
          subPath: auth.cert
        - mountPath: /conf/auth.key
          name: auth-key-path
          subPath: auth.key

      volumes:
      - name: registry-path
        hostPath:
            path: /opt/docker-registry
            type: Directory
      - name: config-path
        configMap:
          name: docker-registry
          items:
          - key: config.yml
            path: config.yml
      - name: auth-path
        configMap:
          name: docker-auth
          items:
          - key: auth.cert
            path: auth.cert
      - name: auth-key-path
        configMap:
          name: docker-auth
          items:
          - key: auth.key
            path: auth.key

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: docker-registry
  name: docker-registry
  namespace: default
spec:
  externalTrafficPolicy: Cluster
  ports:
  - name: http
    nodePort: 30001
    port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: docker-registry
  type: NodePort
